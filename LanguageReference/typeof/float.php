<?php

//由于内部表达方式的原因，比较两个浮点数是否相等是有问题的。不过还是有迂回的方法来比较浮点数值的。
$a = 0.0000001;
$b = 0.0000001;
var_dump($a == $b);
echo '<br>';

//浮点数计算不精确
var_dump(floor((0.1 + 0.7) * 10));
echo '<br>';

var_dump(0.1 + 0.2);
echo '<br>';

// 比较浮点数
// 如上述警告信息所言，由于内部表达方式的原因，比较两个浮点数是否相等是有问题的。不过还是有迂回的方法来比较浮点数值的。
// 要测试浮点数是否相等，要使用一个仅比该数值大一丁点的最小误差值。该值也被称为机器极小值（epsilon）或最小单元取整数，是计算中所能接受的最小的差别值。
//$a 和 $b 在小数点后五位精度内都是相等的。

$a = 1.23456789;
$b = 1.23456780;
$epsilon = 0.00001;

if (abs($a - $b) < $epsilon) {
    echo 'true';
}

$sum = '12300.00';
$a = '10000.30';
$b = '2000.30';
$c = '299.40';
$sum = (float) $sum;
$s = (float) ($a + $b + $c);
var_dump($sum, $s);
echo '<br>';
var_dump($sum == $s);
echo '<br>';
var_dump(bccomp($sum, $s, 2));
//bccomp 返回值 0 相等  左边比右边大返回 1 右边比左边大返回-1
